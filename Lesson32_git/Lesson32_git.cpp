// Lesson32_git.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//

#include <iostream>

int main()
{
    std::cout << "Hello World!\n";
}

/*
    Git - система контроля версий.
    Инструмент (набор консольных программ) для создания и управления
     "точками восстановления" состояния проекта.
    Одним из основных терминов является commit - заархивированное 
     состояние всех включенных в проект файлов.
    Каждый следующий комит хранит информацию только об изменениях
     по сравнению с предыдущим комитом.
    По традициям git репозитории должны содержать только код и 
     необходимые настройки для него. Не должно быть в репозитории:
     - исполнимых файлов (они собираются из кода)
     - промежуточных файлов компиляции (объектный код)
     - отладочной информации (debag)
     - загруженных пакетов (которые можно загрузить отдельно)
     - конфигураций IDE (пути к файлам, к компилятором и т.п.)
    Полный перечень сильно зависит от языка программирования и 
     среды разработки (IDE)


    Github - сайт, сетевое хранилище репозиториев.
    Azure DevOps (dev.azure.com)
    (^ можем зайти с учебным логином и паролем от май стат)
    BitBucket (https://bitbucket.org)

    Создание репозитория
    Репозиторием является папка, для того чтобы сделать папку
     репозиторием, ее надо инициализировать (подать команду git init)
    Создаем файл исключений ( .gitignore) - текстовый файл
     с перечнем того, что не должно сохранятся в комитах.
     Как правило, IDE содержат рекомендованные файлы, если нет,
     то образцы можно найти в https://github.com/github/gitignore
     (скачать файл для нужного языка, переименовать в .gitignore
      и поместить в корень папки-репозитория)

    Добавляются файлы в репозиторий (git add ./)





*/